[package]
name = "logreduce-model"
version = "0.1.0"

license = "Apache-2.0"
repository = "https://github.com/logreduce/logreduce"
documentation = "https://docs.rs/logreduce-model/"
authors = ["TristanCacqueray"]

description = "The core logic of the logreduce project."

edition = "2018"

[lib]
name = "logreduce_model"
path = "src/model.rs"

[dependencies]
anyhow = { workspace = true }
thiserror = { workspace = true }
walkdir = { workspace = true }
logreduce-index = { path = "../index" }
logreduce-report = { path = "../report" }
logreduce-tokenizer = { path = "../tokenizer" }
logreduce-iterator = { path = "../iterator" }
httpdir = { path = "../httpdir" }
logreduce-cache = { path = "../cache" }
zuul-build = { path = "../zuul" }
prow-build = { path = "../prow" }
url = { workspace = true }
ureq = { workspace = true }
rustls = { workspace = true }
rustls-pemfile = "1"
webpki-roots = "*"
serde = { workspace = true }
serde_json = { workspace = true }
serde_yaml = { workspace = true }
tracing = { workspace = true }
lazy_static = { workspace = true }
itertools = { workspace = true }
chrono = { workspace = true }
regex = { workspace = true }

# Model save/load
bincode = { workspace = true }
flate2 = { workspace = true }

[dev-dependencies]
criterion = { workspace = true }
logreduce-generate = { path = "../generate" }
mockito = { workspace = true }
tempfile = { workspace = true }

[[bench]]
name = "bench-model"
harness = false
