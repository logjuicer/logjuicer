---
- name: Set model name
  set_fact:
    _model_name: "{{ zuul.project.name }}/{{ zuul.job }}/{{ zuul.branch }}{{ _model_hash }}.bin"

- name: Create directories
  file:
    path: "{{ item }}"
    mode: 0700
    state: directory
  with_items:
    - "{{ logjuicer_tmp_dir }}"

- name: Download pre-built model
  get_url:
    url: "{{ logjuicer_model_store_url }}/{{ _model_name }}"
    dest: "{{ _model_path }}"
  failed_when: false

- name: Copy config
  copy:
    content: "{{ logjuicer_config | to_json }}"
    dest: "{{ logjuicer_tmp_dir }}/logjuicer-config.json"
  when: _has_config

- name: Check pre-built model
  shell: |
    {{ logjuicer_cmd }} --model {{ _model_path }} check-model --max-age {{ logjuicer_model_age }} || rm -f {{ _model_path }}
  register: _prebuilt_model_status

- name: Analyse the logs
  command: >
    timeout {{ logjuicer_max_run_time }}s {{ logjuicer_cmd }}
      --model {{ _model_path }}
      --report {{ zuul.executor.log_root }}/logjuicer.gz
      {% if logjuicer_web_url %}--web-package-url {{ logjuicer_web_url }}{% endif %}
      {% if _has_config %}--config {{ logjuicer_tmp_dir }}/logjuicer-config.json {% endif %}
      zuul-build
      --api-url {{ logjuicer_zuul_web }}
      {{ zuul.executor.log_root }}/
  register: _logjuicer_run

- name: Copy built model
  when:
    - _logjuicer_run.rc == 0
    - "'Good model' not in _prebuilt_model_status.stdout"
  block:
    - name: Move model to executor log
      command: "mv {{ _model_path }} {{ zuul.executor.log_root }}/model.bin"

    - name: Write model name
      copy:
        content: "{{ _model_name }}"
        dest: "{{ zuul.executor.log_root }}/model.name"

- name: Register the output
  when: _logjuicer_run.rc == 0
  delegate_to: localhost
  zuul_return:
    data:
      zuul:
        artifacts:
          - name: "Logjuicer report"
            url: "logjuicer.html"
